---
import Diagonal from '@elements/Diagonal.astro'
import type { ImageDataProps } from '@elements/Image.astro'
import Image from '@elements/Image.astro'
import ScrollToaster from '@elements/ScrollToaster.astro'
import SectionHeading from '@elements/SectionHeading.astro'

export interface ConfortListItem {
  image: ImageDataProps
  title: string
  description: string
}

export interface Props {
  class?: string
  heading?: string
  list1?: Array<ConfortListItem>
  list2?: Array<ConfortListItem>
  theme?: '1' | '2'
}

const {
  class: className,
  heading = 'комфортная стройка',
  list1 = [
    {
      image: { src: '/images/icons/personal-manager.svg', alt: '' },
      title: 'Персональный менеджер',
      description:
        'Все вопросы решаются в рамках одного контактного лица компании',
    },
    {
      image: { src: '/images/icons/online-communication.svg', alt: '' },
      title: 'Online коммуникация',
      description:
        'Фото и видео отчеты о строительстве. Видеоконференции со специалистом',
    },
    {
      image: { src: '/images/icons/resource-saving.svg', alt: '' },
      title: 'Экономия ресурсов',
      description: 'У вас есть время на работу и семью',
    },
  ],
  list2 = [
    {
      image: { src: '/images/icons/construction-optimization.svg', alt: '' },
      title: 'Культура и оптимизация строительного процесса',
      description:
        'Высокая скорость при наилучшем качестве. Порядок на стротельной площадке',
    },
    {
      image: { src: '/images/icons/technical-supervision.svg', alt: '' },
      title: 'Авторский и технический надзор',
      description:
        'Соответствие проектной работы конечному продукту. Контроль качества строительного процесса',
    },
    {
      image: { src: '/images/icons/scheduled-maintenance.svg', alt: '' },
      title: 'Сервисное обслуживание согласно графику',
      description: 'Мы заботимся о доме, который построили для вас',
    },
  ],
  theme = '1',
  ...rest
} = Astro.props

const lists = [list1, list2]
---

<!-- BLOCK -->
<section
  {...rest}
  class:list={['explanation', className]}
  data-theme={theme}
>
  <SectionHeading
    class="explanation__heading"
    text={heading}
    revealOnScroll
  />

  {
    lists.map((list) => {
      return (
        <div class="explanation__list">
          <Diagonal class="explanation__list__diagonal" />
          {list.map((item, i) => {
            return (
              <div
                class="explanation__item"
                style={{ '--index': i }}
              >
                <ScrollToaster
                  class="explanation__item__image xxxx"
                  data-i={i}
                >
                  <Image
                    {...item.image}
                    lazy
                    contain
                  />
                </ScrollToaster>
                <ScrollToaster class="explanation__item__title">
                  <div set:html={item.title} />
                </ScrollToaster>
                <ScrollToaster class="explanation__item__description">
                  <div set:html={item.description} />
                </ScrollToaster>
              </div>
            )
          })}
        </div>
      )
    })
  }
</section>

<style is:global>
  .explanation {
    --list-padding: 2.5rem;

    position: relative;

    z-index: calc(var(--z-lines) + 1);

    background-color: var(--color-white-1);
    color: var(--color-grey-1);

    overflow: hidden;

    @media (min-width: 769px) {
      &[data-theme='2'] {
        z-index: calc(var(--z-lines) - 1);
      }
    }

    @media (max-width: 768px) {
      --list-padding: 0rem;
      padding-bottom: 2.4rem;
      padding-top: 2.4rem;
    }
  }

  .explanation__heading {
    @media (min-width: 769px) {
      position: absolute;
      left: var(--screen-horisontal-padding);
      top: var(--section-vertical-padding);
      z-index: 1;
    }

    @media (max-width: 768px) {
      margin-bottom: 1.5rem;
      padding: 0 var(--screen-horisontal-padding);
    }
  }

  .explanation__list {
    position: relative;

    display: flex;
    gap: 2.4rem;
    flex-wrap: wrap;

    padding: var(--list-padding) var(--screen-horisontal-padding);

    &:first-of-type {
      padding-top: 18.2rem;

      @media (max-width: 768px) {
        padding-top: unset;
      }
    }

    &:last-of-type {
      [data-theme='1'] & {
        padding-bottom: 12.9rem;
      }

      [data-theme='2'] & {
        padding-bottom: 6.5rem;
      }

      @media (max-width: 768px) {
        [data-theme='1'] & {
          padding-bottom: unset;
        }

        [data-theme='2'] & {
          padding-bottom: unset;
        }
      }
    }

    &:nth-child(even) {
      justify-content: flex-start;
    }

    &:nth-child(odd) {
      justify-content: flex-end;
    }

    @media (min-width: 769px) {
      &:not(:last-child) {
        border-bottom: 0.1rem solid var(--color-white-2);
      }
    }

    @media (max-width: 768px) {
      padding: 0;

      &:not(:last-child) {
        margin-bottom: 2.4rem;
      }
    }
  }

  .explanation__list__diagonal {
    position: absolute;

    height: 100%;

    [data-theme='1'] .explanation__list:nth-child(even) & {
      top: 0;
      right: 15.6rem;

      width: 24.8rem;
    }

    [data-theme='1'] .explanation__list:nth-child(odd) & {
      bottom: 6rem;
      left: 0rem;

      width: 42.8rem;
      height: calc(100% - 6rem);
    }

    [data-theme='2'] .explanation__list:nth-child(even) & {
      top: 0;
      right: 15.6rem;

      width: 52rem;
    }

    [data-theme='2'] .explanation__list:nth-child(odd) & {
      bottom: 0rem;
      left: 0rem;

      width: 67.6rem;
    }

    @media (max-width: 768px) {
      display: none;
    }
  }

  .explanation__item {
    --transition: 0.7s calc(var(--index) * 0.2s);

    [data-theme='1'] & {
      width: 38.4rem;

      @media (max-width: 768px) {
        width: 100%;
      }
    }

    [data-theme='2'] & {
      width: 52rem;

      @media (max-width: 768px) {
        width: 100%;
      }
    }

    @media (max-width: 768px) {
      padding: 0 var(--screen-horisontal-padding);
      padding-bottom: 0.8rem;

      border-bottom: 0.1rem solid var(--color-white-2);
    }
  }

  .explanation__item__image {
    width: 6rem;
    height: 6rem;

    margin-bottom: 0.8rem;

    @media (max-width: 768px) {
      width: 4.2rem;
      height: 4.2rem;

      margin-bottom: 0.8rem;
    }
  }

  .explanation__item__title {
    font-size: 2.2rem;
    text-transform: uppercase;

    margin-bottom: 2.4rem;

    @media (max-width: 768px) {
      font-size: 1.8rem;
      margin-bottom: 1.6rem;
    }
  }

  .explanation__item__description {
    font-size: 2rem;

    @media (max-width: 768px) {
      font-size: 1.6rem;
    }
  }
</style>
