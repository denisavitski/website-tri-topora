---
import Icon from './Icon.astro'
import Image, { type ImageDataProps } from './Image.astro'

export interface Props {
  class?: string
  title?: string
  description?: string
  image?: ImageDataProps
  href?: string
}

const {
  class: className,
  title = 'Подходит, если хочется заехать в рубленый дом поскорее',
  description = 'Это соединение проще бриллиантового замка-на бревнах нет нижних затёсов. Комлей тоже нет как правило, а выпуски брёвен отторцованы прямо, иногда фигурно. Стиль дома уже не дикий природный, а классический, формы плавные и простые. За счёт этих решений сруб рубится в 1,5 раза быстрее. Но при этом он сохраняет все свойства рубленных домов в бриллиантовом замке.',
  image = { src: '/images/dev/1.jpg' },
  href = '/',
  ...rest
} = Astro.props
---

<a
  {...rest}
  {href}
  data-prefetch
  class:list={['article-card', className]}
>
  <Image
    class="article-card__image"
    lazy
    lazyBackground
    cover
    rounded
    {...image}
  />
  <div class="article-card__text">
    <div class="article-card__title">
      <span
        class="article-card__title__value"
        set:html={title}
      />
      <Icon
        class="article-card__title__icon"
        name="tail-arrow"
      />
    </div>

    <e-size-element
      class="article-card__description"
      set:html={description}
      target="parent"
    />
  </div>
</a>

<style is:global>
  .article-card {
    position: relative;

    @media (min-width: 769px) {
      display: flex;
      flex-direction: column;
      justify-content: flex-end;

      width: 79.2rem;
      height: 71.5rem;

      padding: 2.4rem;
      padding-bottom: 0;

      border-radius: 0.8rem;
      overflow: hidden;
    }
  }

  .article-card__image {
    position: relative;

    &::after {
      content: '';

      position: absolute;
      top: 0;
      left: 0;

      z-index: 1;

      width: 100%;
      height: 100%;

      background-image: linear-gradient(
        to bottom,
        rgba(58, 58, 58, 0),
        rgba(46, 46, 46, 1) 140%
      );

      opacity: 0.5;

      transition: opacity var(--duration-button);
    }

    @media (min-width: 769px) {
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;

      width: 100%;
      height: 100%;

      .article-card:hover &::after {
        opacity: 1;
      }
    }

    @media (max-width: 768px) {
      width: 100%;
      height: 33.9rem;
      margin-bottom: 1.6rem;
    }
  }

  .article-card__text {
    @media (min-width: 769px) {
      transition: transform var(--duration-button);
      transform: translateY(var(--height));

      .article-card:hover & {
        transform: translateY(0px);
      }
    }

    @media (max-width: 768px) {
      padding: 0 var(--screen-horisontal-padding);
    }
  }

  .article-card__title {
    font-size: 2.2rem;
    font-weight: 500;
    line-height: 120%;
    text-transform: uppercase;

    margin-bottom: 1.6rem;

    @media (max-width: 768px) {
      font-size: 1.6rem;

      margin-bottom: 0.8rem;
    }
  }

  .article-card__title__value {
    white-space: pre-wrap;
  }

  .article-card__title__icon {
    width: 2.2rem;
    height: 2.2rem;
    fill: var(--color-white-1);
    transform: translateY(10%);

    @media (max-width: 768px) {
      display: none;
    }
  }

  .article-card__description {
    display: block;

    font-size: 2.2rem;
    font-weight: 300;
    line-height: 120%;
    white-space: pre-wrap;

    padding-bottom: 2.4rem;

    @media (max-width: 768px) {
      font-size: 1.6rem;
      padding-bottom: 0;
    }
  }
</style>
