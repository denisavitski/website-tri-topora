---
import type { HTMLAttributes } from 'astro/types'
import Icon from './Icon.astro'

export interface Props extends HTMLAttributes<any> {
  type?: 'prev' | 'next'
  theme?: 'light' | 'dark'
  background?: boolean
  class?: string
  tag?: string
}

const {
  class: className,
  theme = 'light',
  type = 'next',
  background,
  tag = 'e-scroll-step-button',
  ...rest
} = Astro.props

const Tag = tag
---

<Tag
  {...rest}
  class:list={['slider-button', className]}
  data-type={type}
  data-theme={theme}
  data-background={background}
>
  <Icon
    class="slider-button__arrow"
    name="tail-arrow"
  />
</Tag>

<style is:global>
  .slider-button {
    --tween-duration: 300;
    --tween-easing: easeInOutCubic;

    width: 8.1rem;
    height: 3.4rem;

    display: inline-flex;
    align-items: center;
    justify-content: center;

    border-radius: 3.2rem;

    user-select: none;

    transition: opacity var(--duration-button);

    &:not([data-background]) {
      border: 0.1rem solid var(--color);
    }

    &[data-theme='light'] {
      --color: var(--color-white-1);

      &[data-background] {
        background-color: var(--color-grey-1);
      }
    }

    &[data-theme='dark'] {
      --color: var(--color-grey-1);

      &[data-background] {
        background-color: var(--color-white-1);
      }
    }

    &[data-type='prev'] {
      --step: -1;
      transform: scaleX(-1);
    }

    &[data-type='next'] {
      --step: 1;
    }

    &[disabled] {
      opacity: var(--disabled-opacity, 0.6);
      pointer-events: none;
    }

    @media (max-width: 768px) {
      width: 5rem;
      height: 2.3rem;
    }
  }

  .slider-button__arrow {
    width: 3.3rem;
    height: 1.8rem;

    fill: var(--color);

    @media (max-width: 768px) {
      width: 1.8rem;
      height: 0.7rem;
    }
  }
</style>
