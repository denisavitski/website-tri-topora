---
import CardInfo, { type Props as CardInfoProps } from '@elements/CardInfo.astro'
import type { ImageDataProps } from './Image.astro'
import Image from './Image.astro'
import type { HTMLAttributes } from 'astro/types'

export type ProjectProps = Omit<CardInfoProps, 'size' | 'class'> & {}

export interface Props extends Omit<CardInfoProps, 'size' | 'class'>, HTMLAttributes<any> {
  class?: string
  href?: string | undefined
  image?: ImageDataProps | undefined
}

const {
  class: className,
  href = '/',
  name = 'Дом Макдональд',
  image = { src: '/images/projects-section/1.jpg', alt: '' },
  stats = [
    {
      icon: 'bed',
      name: '3 спальни',
    },
    {
      icon: 'bath',
      name: '3 санузла',
    },
    {
      icon: 'size',
      name: '472 м²',
    },
  ],
  ...rest
} = Astro.props
---

<a
  {...rest}
  {href}
  data-prefetch
  class:list={['project-card', className]}>
  <div class="project-card__image-box">
    <Image
      class="project-card__image"
      {...image}
      lazy
      lazyBackground
      cover
    />
  </div>
  <CardInfo
    class="project-card__info"
    name={name}
    stats={stats}
    size={'normal'}
  />
</a>

<style is:global>
  .project-card {
    width: 100%;
  }

  .project-card__image-box {
    height: 42rem;
    margin-bottom: 1.6rem;

    border-radius: 0.8rem;
    overflow: hidden;

    @media (max-width: 768px) {
      border-radius: 0rem;
      height: 31.5rem;
    }
  }

  .project-card__image {
    width: 100%;
    height: 100%;

    @media (hover: hover) {
      will-change: transform;
      transition: transform var(--duration-button);

      .project-card:hover & {
        transform: scale(1.015);
      }
    }
  }

  .project-card__info {
    @media (max-width: 768px) {
      padding: 0 var(--screen-horisontal-padding);
    }
  }
</style>
