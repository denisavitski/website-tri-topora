---
import CaptureOnce from './CaptureOnce.astro'
import SectionHeading from './SectionHeading.astro'

export type ShowcaseDirection = 'ltr' | 'rtl'

export interface Props {
  class?: string | undefined
  heading?: string | undefined
  direction?: ShowcaseDirection
}

const { class: className, direction = 'ltr', heading, ...rest } = Astro.props
---

<div
  {...rest}
  class:list={['showcase', className]}
  data-direction={direction}
>
  {
    heading && (
      <SectionHeading
        class="showcase__heading"
        text={heading}
        revealOnScroll
      />
    )
  }
  <CaptureOnce class="showcase__cols">
    <div class="showcase__col">
      <slot name="col-1" />
    </div>

    <div class="showcase__col">
      <slot name="col-2" />
    </div>
  </CaptureOnce>
</div>

<style is:global>
  .showcase {
    position: relative;
    z-index: calc(var(--z-lines) + 1);

    padding: var(--section-vertical-padding) var(--screen-horisontal-padding);
  }

  .showcase__heading {
    margin-bottom: 4rem;

    @media (max-width: 768px) {
      margin-bottom: 2.4rem;
    }
  }

  .showcase__cols {
    display: flex;
    gap: 2.4rem;

    @media (min-width: 769px) {
      .showcase[data-direction='rtl'] & {
        flex-direction: row-reverse;
      }
    }

    @media (max-width: 768px) {
      flex-direction: column;

      .showcase[data-direction='rtl'] & {
        flex-direction: column-reverse;
      }
    }
  }

  .showcase__col {
    display: flex;
    flex-direction: column;

    @media (min-width: 769px) {
      transition: clip-path 1.5s;

      clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);

      &:nth-of-type(2) {
        transition-delay: 0.2s;
      }

      .showcase__cols.captured & {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
      }
    }
  }
</style>
